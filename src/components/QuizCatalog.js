import React, { useState, useEffect } from 'react';
import QuizCard from './QuizCard';
import './QuizCatalog.css';

const QuizCatalog = ({ onQuizSelect, quizProgress }) => {
  const [categories, setCategories] = useState([]);
  const [quizzes, setQuizzes] = useState([]);
  const [selectedCategory, setSelectedCategory] = useState('all');
  const [filteredQuizzes, setFilteredQuizzes] = useState([]);
  const [loading, setLoading] = useState(true);

  // –ó–∞–≥—Ä—É–∂–∞–µ–º –¥–∞–Ω–Ω—ã–µ –∫–∞—Ç–µ–≥–æ—Ä–∏–π –∏ –≤–∏–∫—Ç–æ—Ä–∏–Ω
  useEffect(() => {
    const loadData = async () => {
      try {
        const response = await import('../data/categories.json');
        const data = response.default;
        setCategories(data.categories);
        setQuizzes(data.quizzes);
        setLoading(false);
      } catch (error) {
        console.error('–û—à–∏–±–∫–∞ –∑–∞–≥—Ä—É–∑–∫–∏ –¥–∞–Ω–Ω—ã—Ö:', error);
        setLoading(false);
      }
    };

    loadData();
  }, []);

  // –§–∏–ª—å—Ç—Ä–∞—Ü–∏—è –≤–∏–∫—Ç–æ—Ä–∏–Ω –ø–æ –∫–∞—Ç–µ–≥–æ—Ä–∏—è–º
  useEffect(() => {
    if (selectedCategory === 'all') {
      setFilteredQuizzes(quizzes);
    } else {
      const filtered = quizzes.filter(quiz => quiz.category === selectedCategory);
      setFilteredQuizzes(filtered);
    }
  }, [selectedCategory, quizzes]);

  const handleCategorySelect = (categoryId) => {
    setSelectedCategory(categoryId);
  };

  if (loading) {
    return (
      <div className="catalog-loading">
        <div className="loading-spinner"></div>
        <p>–ó–∞–≥—Ä—É–∂–∞–µ–º –≤–∏–∫—Ç–æ—Ä–∏–Ω—ã...</p>
      </div>
    );
  }

  return (
    <div className="quiz-catalog">
      {/* –ó–∞–≥–æ–ª–æ–≤–æ–∫ —Å–µ–∫—Ü–∏–∏ */}
      <div className="catalog-header">
        <h1 className="catalog-title">
          –í—ã–±–µ—Ä–∏ —Å–≤–æ—é –≤–∏–∫—Ç–æ—Ä–∏–Ω—É
          <span className="title-emoji">‚ú®</span>
        </h1>
        <p className="catalog-subtitle">
          –û—Ç–∫—Ä–æ–π –Ω–æ–≤—ã–µ –≥—Ä–∞–Ω–∏ —Å–≤–æ–µ–π –ª–∏—á–Ω–æ—Å—Ç–∏ —Å –ø–æ–º–æ—â—å—é —É–≤–ª–µ–∫–∞—Ç–µ–ª—å–Ω—ã—Ö —Ç–µ—Å—Ç–æ–≤
        </p>
      </div>

      {/* –§–∏–ª—å—Ç—Ä—ã –∫–∞—Ç–µ–≥–æ—Ä–∏–π */}
      <div className="category-filters">
        <h2 className="filters-title">–ö–∞—Ç–µ–≥–æ—Ä–∏–∏</h2>
        <div className="filters-container">
          {categories.map(category => (
            <button
              key={category.id}
              className={`filter-button ${selectedCategory === category.id ? 'active' : ''}`}
              onClick={() => handleCategorySelect(category.id)}
            >
              <span className="filter-icon">{category.icon}</span>
              <span className="filter-text">{category.name}</span>
            </button>
          ))}
        </div>
      </div>

      {/* –ò–Ω—Ñ–æ—Ä–º–∞—Ü–∏—è –æ –≤—ã–±—Ä–∞–Ω–Ω–æ–π –∫–∞—Ç–µ–≥–æ—Ä–∏–∏ */}
      {selectedCategory !== 'all' && (
        <div className="category-info">
          {(() => {
            const currentCategory = categories.find(cat => cat.id === selectedCategory);
            return currentCategory?.description ? (
              <p className="category-description">
                <span className="category-icon">{currentCategory.icon}</span>
                {currentCategory.description}
              </p>
            ) : null;
          })()}
        </div>
      )}

      {/* –°–µ—Ç–∫–∞ –≤–∏–∫—Ç–æ—Ä–∏–Ω */}
      <div className="quizzes-section">
        <div className="quizzes-header">
          <h2 className="section-title">
            {selectedCategory === 'all' 
              ? `–í—Å–µ –≤–∏–∫—Ç–æ—Ä–∏–Ω—ã (${filteredQuizzes.length})`
              : `${categories.find(cat => cat.id === selectedCategory)?.name} (${filteredQuizzes.length})`
            }
          </h2>
        </div>

        {filteredQuizzes.length > 0 ? (
          <div className="quizzes-grid">
            {filteredQuizzes.map(quiz => (
              <QuizCard
                key={quiz.id}
                quiz={quiz}
                onSelect={onQuizSelect}
                progress={quizProgress[quiz.id]}
              />
            ))}
          </div>
        ) : (
          <div className="no-quizzes">
            <div className="no-quizzes-icon">üîç</div>
            <h3>–í–∏–∫—Ç–æ—Ä–∏–Ω—ã –Ω–µ –Ω–∞–π–¥–µ–Ω—ã</h3>
            <p>–í —ç—Ç–æ–π –∫–∞—Ç–µ–≥–æ—Ä–∏–∏ –ø–æ–∫–∞ –Ω–µ—Ç –≤–∏–∫—Ç–æ—Ä–∏–Ω. –ü–æ–ø—Ä–æ–±—É–π—Ç–µ –≤—ã–±—Ä–∞—Ç—å –¥—Ä—É–≥—É—é –∫–∞—Ç–µ–≥–æ—Ä–∏—é.</p>
            <button 
              className="btn btn-primary"
              onClick={() => handleCategorySelect('all')}
            >
              –ü–æ–∫–∞–∑–∞—Ç—å –≤—Å–µ –≤–∏–∫—Ç–æ—Ä–∏–Ω—ã
            </button>
          </div>
        )}
      </div>

      {/* –°—Ç–∞—Ç–∏—Å—Ç–∏–∫–∞ */}
      <div className="catalog-stats">
        <div className="stats-container">
          <div className="stat-item">
            <span className="stat-number">{quizzes.length}</span>
            <span className="stat-label">–í–∏–∫—Ç–æ—Ä–∏–Ω</span>
          </div>
          <div className="stat-item">
            <span className="stat-number">{categories.length - 1}</span>
            <span className="stat-label">–ö–∞—Ç–µ–≥–æ—Ä–∏–π</span>
          </div>
          <div className="stat-item">
            <span className="stat-number">{Object.keys(quizProgress).length}</span>
            <span className="stat-label">–í –ø—Ä–æ—Ü–µ—Å—Å–µ</span>
          </div>
        </div>
      </div>
    </div>
  );
};

export default QuizCatalog;